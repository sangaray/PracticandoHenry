M4FE-L5 Daiana Grillia
NEXTJS Y TAILWIND
DIFERENCIA ENTRE TAILWIND Y CSS PURO
Se pone una clase de tailwind dentro del elemento HTML al que quiero darle estilos

INSTALAR TAILWIND MANUALMENTE
npm install -D tailwindcss@latest postcss@latest autoprefixer@latest
en mi caso
npm i -D tailwindcss@^3.4.1 postcss@^8.x.x autoprefixer@^10.x.x

Agregar Archivos de Configuración
npx tailwindcss init -p

PURGA EN TAILWIND
// purge:['./src/**/*.{js,jsx,ts,tsx}'], esto se hizo hasta la versión 3.0.0, ahora no es necesario ya que se incluye en content:[] en el archivo tailwind.config.js

EXTENSIONES ÚTILILES EN VSCODE
- Tailwind CSS IntelliSense
  Me muestra o permite autocompletar las clases de tailwind
- Tailwind Docs (Austen Cameron)
  Brinda una forma rápida de acceder a la doucumentación de tailwind

M4FE-L5 mAXI ROMERO
TAILWIND Y NEXTJS
Introducción Tailwind CSS
Tailwindcss
- Es un famework de CSS
- Clases de utilidad para el diseño en línea
- Proporciona clases atómicas que representan propiedades individuales de CSS

Clases Atómicas
Son pequeñas reglas de estilo independientes y reutilizables que se aplican directamente a los elementos HTML para construir interfaces de usuario de manera modular y eficiente.

Class	                  Properties
block	display:          block;
inline-block	display:  inline-block;
inline	display:        inline;
flex	display:          flex;
inline-flex	display:    inline-flex;
table	display:          table;

Conceptos:
- Aplicar estilos CSS a través de clases individuales.
- Corresponden a propiedades específicas y sus valores.
- Promueve la creación de interfaces eficientes y de rápida construcción.

Sistema de Clases de Utilidad

CSS (pura)
Generated css
.parrafo-grande-azul {
  font-size: 18px;
  color: blue;
}

HTML
<p class="parrafo-grande-azul">Este es un gran texto azul.</p>

HTML (clases de utilidad)
<p class="text-lg text-blue-500">Este es un gran texto azul.</p>

Margen y Relleno
CSS (pura)
.div-con-margen-y-relleno {
  margin: 16px;
  padding: 8px;
}

HTML
<div class="div-con-margen-y-relleno">Contenido con margen y relleno.</div>

HTML (clases de utilidad)
<div class="m-4 p-2">Contenido con margen y relleno.</div>

Estados de Hover y Focus
- Uso de pseudo-clases de CSS.

HTML (clases de utilidad)
<button class="bg-blue-500 hover:bg-blue-700 ...">Botón</button>

Diseños responsivos
- Tailwind permite que sea sencillo crear diseños responsivos.

HTML (clases de utilidad)
<div class="w-full md:w-1/2">Este div ocupa </div>

Breakpoint  prefix	Minimum width	CSS
sm	640px	  @media  (min-width: 640px) { ... }
md	768px	  @media  (min-width: 768px) { ... }
lg	1024px	@media  (min-width: 1024px) { ... }
xl	1280px	@media  (min-width: 1280px) { ... }
2xl	1536px	@media  (min-width: 1536px) { ... }

¿Por qué utilizar un Framework de CSS?
Productividad mejorada
- Proporcionan un conjunto predefinido de componentes y estilos que puedes usar directamente en tu proyecto.
- Permite construir interfaces de usuario de manera más rápida y eficiente.
Consistencia visual
- Garantizamos una apariencia consistente en toda la aplicación.
- Mejora la experiencia del usuario.
Responsividad integrada
- Los componentes y estilos proporcionados se adaptarán automáticamente a diferentes tamaños de pantalla.
- Simplifica el proceso de desarrollo para dispositivos móviles y de escritorio.

Tailwind CSS	 
Filosofía: clases de utilidad para estilos en HTML
Curva de Aprendizaje: pronunciada debido a clases de utilidad
Flexibilidad: muy flexible con clases de utilidad
Tamaño del Paquete: pequeño y optimizado
Popularidad: creciendo rápida

Bulma
Filosofía: componentes prediseñados
Curva de Aprendizaje: relativamente fácil
Flexibilidad: moderadamente flexible
Tamaño del Paquete: moderado
Popularidad: popular y activa

Foundation
Filosofía: componentes y estilos
Curva de Aprendizaje: moderada
Flexibilidad: moderadamente flexible
Tamaño del Paquete: moderado
Popularidad: menos popular y activa

Materialize CSS
Filosofía: componentes y estilos
Curva de Aprendizaje: moderada
Flexibilidad: flexible
Tamaño del Paquete: moderado
Popularidad: activa, pero menos que Bootstrap

Bootstrap
Filosofía: componentes y estilos
Curva de Aprendizaje: relativamente fácil
Flexibilidad: flexible
Tamaño del Paquete: moderado
Popularidad: ampliamente popular

Integrando Tailwind a un proyecto de Next.js (Via NPM)
Comando de instalación:
Para nextjs 14.2.10
npm install -D tailwindcss@^3.4.17 postcss@^8.5.6 autoprefixer@^10.4.21

Los @latest son para asegurarnos de instalar la última versión disponible y utilizamos el -D para instalarlos como dependencias de desarrollo.

Generar los archivos postcss.config.js y tailwind.config.js
Ejecuta el comando:
Generated bash
npx tailwindcss init -p

> .next
> node_modules
> public
> src
eslintrc.json
jsconfig.json
next-env.d.ts
next.config.mjs
package-lock.json
package.json
README.md
tsconfig.json

> .next
> node_modules
> public
> src
eslintrc.json
=> jsconfig.json
next-env.d.ts
next.config.mjs
package-lock.json
package.json
=> JS postcss.config.js
README.md
=> JS tailwind.config.js
tsconfig.json

- Tailwind tiene valores predeterminados en su sistemas de clases de utilidad.
- Aquí podrás cambiar o asignar nuevos valores para este sistema.

/** @type {import('tailwindcss').Config} */
module.exports = {
  content: [],
  theme: {
    extend: {},
  },
  plugins: [],
}

content
- Es una propiedad.
- Se utiliza para especificar los archivos que Tailwind CSS debe analizar para generar las clases de estilo correspondientes.
- Dentro del arreglo content define el listado de patrones de estos archivos. 

- Define las rutas donde se encuentran.

/** @type {import('tailwindcss').Config} */
module.exports = {
  content: [
    "./src/pages/**/*.{js,ts,jsx,tsx,mdx}",
    "./src/components/**/*.{js,ts,jsx,tsx,mdx}",
    "./src/app/**/*.{js,ts,jsx,tsx,mdx}",
  ],
  theme: {
    extend: {},
  },
  plugins: [],

theme
- Es una propiedad.
- Puedes personalizar todos los aspectos del sistema de diseño de Tailwind CSS.
- Esto incluye colores, tipografía, espaciado, sombras, bordes, transiciones, y más. 

 Dentro de la propiedad colors ubicada en extend de theme conserva los valores predeterminados.

/** @type {import('tailwindcss').Config} */
module.exports = {
  content: [
    "./src/pages/**/*.{js,ts,jsx,tsx,mdx}",
    "./src/components/**/*.{js,ts,jsx,tsx,mdx}",
    "./src/app/**/*.{js,ts,jsx,tsx,mdx}",
  ],
  theme: {
    extend: {
      colors: {
        "blue-001": "#1DA1F2",
        "green-001": "#1BCF2A",
      },
    },
  },
  plugins: [],
};

plugins
- Pueden ser utilizados para sumar componentes, utilidades y variantes personalizadas.

Para terminar la configuración...
- En el archivo global.css agregar lo siguiente al comienzo del archivo:

@tailwind base;
@tailwind components;
@tailwind utilities;

DISEÑO RESPONSIVE Y MOVILE-FIRST CON TAILWIND
¿Qué es el Mobile-First?
- Es un enfoque de diseño web.
- Prioriza la creación y optimización de una experiencia de usuario para dispositivos móviles antes que para dispositivos de escritorio.
- Asegura que el diseño y la funcionalidad sean adecuados y eficientes en pantallas pequeñas antes de considerar pantallas más grandes.

Sistema de Clases Responsive

Breakpoint Minimum CSS
prefix	   width	
sm         640px	 @media (min-width: 640px) { ... }  
md	       768px	 @media (min-width: 768px) { ... }
lg	       1024px  @media (min-width: 1024px) { ... }
xl	       1280px  @media (min-width: 1280px) { ... }
2xl	       1536px  @media (min-width: 1536px) { ... }
- Basadas en prefijos que corresponden a diferentes tamaños de pantalla (breakpoints).
- Permiten aplicar estilos que solo se activan en el tamaño de pantalla adecuado.

Enfoque Mobile-First con Tailwind CSS
- El enfoque mobile-first es intrínseco al sistema.
- Las clases de utilidad se aplican desde el tamaño más pequeño hacia arriba.

<div class="w-full md:w-1/2 lg:w-1/3"></div>

Personalización y Extensión de Tailwind CSS
@apply
- Es una directiva de Tailwind CSS.
- Permite combinar múltiples clases de utilidad en una sola clase personalizada.
- Es útil para evitar la repetición de clases en nuestro HTML, promoviendo un código más limpio y mantenible.
- Permite parametrizar clases de utilidad para luego usarlas de mejor manera.

MEJORES PRÁCTICA, OPTIMIZACIÓN Y HERRAMIENTAS
Configurar la Purga en Tailwind CSS
- Es un proceso sencillo especialmente para proyectos en producción.
- La configuración se realiza dentro del archivo tailwind.config.js.
- Tailwind puede identificar y eliminar cualquier clase que no se utiliza.
- Optimiza el archivo CSS final.
Esta funcionalidad ya se encuentra agregada de forma automática en content. 👌

Herramientas y Extensiones para Mejorar el Desarrollo con Tailwind CSS
- Tailwind CSS se complementa con diversas herramientas y extensiones de editor.
- Enriquecen la experiencia de desarrollo.
- Ofrecen funcionalidades como autocompletado de clases, visualización de estilos y ayuda en la depuración de CSS.

Tailwind CSS Intellisense (tailwind labs)
- Es una extensión para Visual Studio Code.
- Mejora la experiencia de desarrollo con Tailwind al proporcionar autocompletado de clases, vista previa de colores y sombras, y validación de sintaxis.
- Esta extensión puede aumentar significativamente tu productividad al escribir HTML y aplicar estilos con Tailwind.

Headwind (Ryan Heybourn)
- Es una extensión para VS Code.
- Organiza automáticamente las clases de Tailwind en tus archivos.
- Ayuda a mantener el código limpio y consistente, siguiendo un orden específico que facilita la lectura y mantenimiento del código.

Tailwind Docs
- Permite tener acceso rápido a la documentación de Tailwind CSS desde el editor.
- Algunos plugins y extensiones ofrecen funcionalidades que permiten buscar y acceder a esta documentación sin salir del entorno de desarrollo.

RESUMEN DE LA CLASE
- Tailwind framework de CSS que se centra en la construcción de interfaces web mediante la aplicación de clases de utilidad directamente en el HTML.
- Diseño responsivo y estrategias para garantizar una experiencia fluida en dispositivos móviles.
- Enfoque mobile-first definición de breakpoints que representan distintas dimensiones de dispositivos.
- Configuraciones avanzadas, optimización de rendimiento y algunas herramientas útiles para facilitar el desarrollo con Tailwind.


Recursos
imagenes gratuitas
https://placehold.co

Playground de SQL
https://shell.duckdb.org/

Tailwind Cheat Sheet
https://www.creative-tim.com/twcomponents/cheatsheet