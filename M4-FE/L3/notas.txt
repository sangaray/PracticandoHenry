M4FE-L3 Daiana
NextJS
INSTALACIÓN
npx create-next-app@14
Ok to proceed? (y) y
What is your project named? next-project (ejemplo)
Would you like to use TypeScript? no / yes (respondemos yes)
Would you like to use ESLint? no / yes (respondemos yes)
Would you like to use Tailwind CSS? no / yes (respondemos no)
Would you like your code inside a "src" directory? no / yes (respondemos yes) 
Would you like to use App Router? (recommended) no / yes (respondemos yes)
Would you like to customize the import alias (@/* by default)? no / yes (respondimos no)

COMPONENTES REUTILIZABLES
Si el componente se llama index no hace falta ponerlo en la importación, si tiene otro nombre sí se debe poner luego de la carpeta donde se encuentra el componentea

MAXI
NEXT.JS
Configuración
Next.js es un framewok que brinda a los desarrolladores la posibilidad de trabajar sobre un marco estructurado y controlado.
Comando de Configuración
npx create-next-app@latest (para evitar errores o estoy usando create-next-app@14, por la compatibilidad con MUI)
What is your project named? next-project (ejemplo)
Would you like to use TypeScript? no / yes (respondemos yes)
Would you like to use ESLint? no / yes (respondemos yes)
Would you like to use Tailwind CSS? no / yes (respondemos no)
Would you like your code inside a "src" directory? no / yes (respondemos yes) 
Would you like to use App Router? (recommended) no / yes (respondemos yes)
Would you like to customize the import alias (@/* by default)? no / yes (respondimos no)

ESLint
- Escanea el códigoa medida que se va escribiendo
- Permite encontrar errores, reportarlos o arreglarlos
-Reduce la posibilidad de bugs

App Router
Es un tipo de estructura implementada para manejar enrutamientos y navegación en la aplicación.

Import aliases
Es una manera más limpia de trabajar con las importaciones para que estas puedan ser referenciadas a partir de grupos. El alias me permitirá importar únicamente con "@/componentes/componente"

Archivos de Configurción
next.config.mjs (importa los tipos de next)
 /* @type {import('next').NextConfig} */
 const nextConfig={}

 export default nextConfig

 layout.tsx  (inserta fuente, metadata, y el body con los childrens)
 // En la parte superior se ve la ruta del archivo:
// src > app > layout.tsx > [e] metadata

import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body className={inter.className}>{children}</body>
    </html>
  );
}

.eslintrc.json ()
{
  "extends": ["next/core-web-vitals", "next/typescript"],
}

page.tsx es la página principal

Se instala .gitignore con todo lo que tiene que ignorar

Para next todos los componentes son server side component los tiene que precargar y te devuelve sólo los archivos estáticos.

Configuración de rutas y directorios

                          App
              blog                 dashboard  (Root)
             [slug]        analytics           settings
                       (leaf)               password  profile
                                            (leaf)    (leaf)
                                    
Next necesita que en la carpeta que va a ser una ruta haya un archivo page.tsx

Creación de Páginas
Una página corresponde a un componente de React asociado a una ruta específica. Define la estructura y contenido que se representará en dicha ruta. El router basado en sistema de archívos es análogo a un árbol, cada página es una hoja.

app 
  demo

Enrutamiento anidado en next.js
app
  dashboard
     settings

     Componente Reutilizables 
     Aquellos de carácter reutilizable no debn ir en la carpeta app. Define una carpeta llamada components y allá va a ir el componente reutilizable componnts fuera de app, per aún dentro de src.

     src
        app 
        componentes