REACT ROUTES
Esta parte se trabaja en el archivo main.jsx
React Router DOM: permite trabajar con rutas de manera facil
ReactDom.createRoot(document.getElementById("root")).render()
Envuelve a todo el contenido de app menos los imports
BrowserRouter: permite trabajar con rutas de manera facil
Envuelve a App

Estructura del archivo main.jsx
Aquí van los imports
ReactDOM.createRoot(document.getElementById("root")).render(
  <StrictMode>
    <BrowserRouter>
      <App />
    </BrowserRouter>
  </StrictMode>
);

Path = URL

Routes es el contenedor de las rutas
Route es cada una de las vistas de la app
ROUTE
requiere dos parámetros un path = URL y un element = componente
Estructrura de APP con las rutas
import { useState, useEffect } from "react";

import { Route, Routes } from "react-router-dom";
import HomePage from "./views/HomePage";
import Navbar from "./components/NavBar";
import LoginPage from "./views/LoginPage";
import AboutPage from "./views/AboutPage";
import "./App.css";

function App() {
  const [contacts, setContacts] = useState([]);

  useEffect(() => {
    fetch("https://jsonplaceholder.typicode.com/users")
      .then((response) => response.json())
      .then((data) => setContacts(data));
  });

  return (
    <div className="App">
      <Navbar />{" "}
      {/* por estar afuera de routes se va a renderizar siempre, en todas las páginas o vistas */}
      <Routes>
        <Route path="/" element={<LoginPage />} />
        <Route path="/home" element={<HomePage contacts={contacts} />} />
        <Route path="/about" element={<AboutPage />} />
      </Routes>
    </div>
  );
}

React Dom nos brinda el componente Link que reemplaza a los a en la NavBar, la diferencia entre ambos es el atributo se llama to y no href

Estructura de la NavBar
import style from "./styles/NavBar.module.css";
import { Link } from "react-router-dom";

function Navbar() {
  return (
    <div className={style.container}>
      {/* <a href="/home">Home</a>
      <a href="/about">About</a> */}
      <Link to="/home">Home</Link>
      <Link to="/about">About</Link>
    </div>
  );
}

RUTAS DINÁMICAS - PARÁMETROS
Usamos el hook useParams para acceder a los parámetros de la ruta

REDIRECCIÓN DE EVENTOS
Para esto usaremos dos hooks nuevo
useNavigate para redireccionar, para usarlo sólo debo ejecutarlo, lo que hacer es retornar una función que pasa  una ruta que es donde queremos que nos redirija

useLocation para obtener la información de la ruta actual, se usa igual que useNavigate, pero con un parámetro que es el objeto location, donde se encuentra la información de la ruta actual

REACT ROUTING - Ariel
ROUTING
- Es la gestión de diferentes vistas de una página web
- Permite al usurio moverse entre las distintas páginas de un sitio sin la necesidad de recargar la página por completo
- Los elementos serán denderizados en cada ruta de la SPA
SPA: Single Page Appliction. 
Antes en el diseño web se usaba el modelo en el que se hacía una petición al back y se mostraba la página recargandola toda cada vez que se presionaba un link a una página distintas
Hoy en día el navegador hace la petición y carga todos los archivos sólo la primera vez, trayendo todas las vistas, ahora con single page application, se fija lo que necesita actualizar y trae sólo eso, dejando el resto de la página como está sin tener que recargar todo de nuevo, sino únicamente lo que se necesita modificar, lo que es un modelo mucho más eficiente

REACT-ROUTER-DOM
- Es una librería de React-
- Se enfoca en el manejo de rutas para aplicaciones del lado del cliente
-Esta herramiena gestiona el proceso de denderizado de una SPA, a partir d elas rutas definidas para los difeenes componentes de nuestar aplicación

INSTALACIÓN
Comando de INSTALACIÓNnpm install react-router-dom
Esto nos permite tener acceso alas funcionalidades de React Router Dom enla ultima versión estable

CONFIGURACIÓN
Componente de CONFIGURACIÓNBrouserRouter
Este es el componente de react-router-dom que nos proveerá delas distintas funcionalidades para habilitar el enrutamiento en nuesta SPAEste debe ubicarse en el nivel más alto de nuestra aplicación