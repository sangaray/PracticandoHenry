notas.ts
TypeORM
Página de la documentación
https://typeorm.io/
Instalación y Configuración
ORM va a pisar configuraciones ya etablecidas y el proyecto va a dejar d funcionar correctamente
1. npm install typeorm --save
2. npm install reflect-metadata --save
3. Hacer el siguiente import en algún lugar global del proyecto: 
   import "reflect-metadata"
4. Instalar los types de node: 
   @types/node
5. Controladores de postgres: 
   npm install pg --save
6. Habilitar en tsconfig.json:
   "emitDecoratorMetadata": true,
   "experimentalDecorators": true,
   "lib": ["ES6"], 
7. Crear archivo data-source.ts con la siguiente Configuración
   import { DataSource } from "typeorm";
   export const AppDataSource = new DataSource({
     type: "postgres",
     host: "localhost",
     port: 5432,
     username: "postgres",
     password: "Eli09Ate89",
     database: "test",
     synchronize: true,
     logging: true,
     entities: [],
     subscribers: [],
     migrations: [],
});
8. Abrir SQL Shell para crear la base de datos, ya que debe estar desde antes de realizar la conexión inicializando AppDataSource Escribir
9. Activar y poner en false la siguiente propiedad de tsconfig.json   "strictPropertyInitialization": false, 
10. Crear la entidad User, usando los decoradores @entity() y @column()
11. Configuraciones de los servicios, aquí es donde voy a establecer la conexión con la base de datos.
   export const getUsersService = async () => {
   const users = await AppDataSource.getRepository(User).find();
   return users;
};

export const createUserService = async (userData: UserDto) => {
  const user = await userModel.create(userData); // crea el registro
  const result = userModel.save(user); // guarda el registro
  return user;
};

export const getUserByIdService = async (id: number) => {
  const user = await userModel.findOneBy({ id });
  return user;
};

