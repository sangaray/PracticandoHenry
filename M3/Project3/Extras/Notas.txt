FRONTEND El archivo index.html es el que se envía al navegador. Tiene una
etiqueta
<div id="root"></div>
El archivo main.jsx Inyecta el componente App dentro del div con id="root"
dentro de index.html createRoot(document.getElementById("root")).render(
<StrictMode>
  <App />
</StrictMode>
); Esto es lo que muestra nuestra aplicación en el navegador ARCHIVO NORMALIZE
PARA CSS https://necolas.github.io/normalize.css/8.0.1/normalize.css

Archivos .js: cuando vamos a escribir sólo código javascript
Archivos .jsx: Sólo cuando vamos a crear componentes

Los estados se escriben dentro de la función pero antes del return, en la sección de javascript

props: siempre es un objeto que contiene todas las propiedades que le pasé desde el padre

Siempre debemos asegurarnos de que los componentes fuencionan bien, que todo se ve como quiero que se vea y que no hay errores, luego involucro al backend

Las peticiones deben hacerse donde las necesite y no en lugares que no las necesite

TRES COSAS IMPORTANTES
- Las peticiones se pueden hacer a multiples servidores
- La respuesta del servidor se guarda en un estados
- La petición se va a hacer cuando el componente se monte

CORS
Es como un guardaespaldas del back que dice a qué urls se pueden hacer las peticiones y desde que lugar.

Debemos setear estas tres propiedades en falst
  dropSchema: false,
  synchronize: false,
  logging: false, 

19:32 hs clase 10 Forms